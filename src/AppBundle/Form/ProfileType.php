<?php

namespace AppBundle\Form;

use FOS\UserBundle\Form\Type\ProfileFormType as BaseType;
use Symfony\Bridge\Doctrine\Form\Type\EntityType;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\Form\Extension\Core\Type\BirthdayType;
use Symfony\Component\Form\Extension\Core\Type\ChoiceType;
use Symfony\Component\Form\Extension\Core\Type\CountryType;
use Symfony\Component\Form\Extension\Core\Type\HiddenType;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;

class ProfileType extends BaseType
{
    private $container;
    /**
     * @param string $class The User class name
     */
    public function __construct($class,ContainerInterface $serviceContainer)
    {
        parent::__construct($class);
        $this->container    = $serviceContainer;
    }


    /**
     * @param FormBuilderInterface $builder
     * @param array $options
     */
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        parent::buildForm($builder, $options); // TODO: Change the autogenerated stub
        $genres = $this->container->get('trav.form.methods')->getGenres();

        $builder->add('firstname',TextType::class,[
            'label'=>'trav.form.firstname'
        ])
        ->add('name',TextType::class,[
            'label'=>'trav.form.lastname'
        ])
        ->add(
            'birthdate',
            BirthdayType::class,
            [
                'label'=>'trav.birthdate',
                'required'=>true,
                'years' => range(date('Y')-80, date('Y')-16)
            ]
        )
        ->add(
            'languages',
            EntityType::class,
            [
                'class' => 'AppBundle\Entity\Langue',
                'choice_label' => 'code',
                'expanded' => false,
                'multiple' => true,
                'required' => true
            ]
        )
        ->add(
            'genre',
            ChoiceType::class,
            [
                'choices' => $genres,
                'placeholder' => 'trav.please.select',
                'expanded' => false,
                'multiple' => false,
                'required' => true,
                'translation_domain' => 'messages',
                'choice_translation_domain' => 'messages'
            ]
        )
        ->add(
            'address',
            TextType::class,
            [
                'attr' => ['class' => 'js-address', 'onFocus' => 'geolocateProfil()']
            ]
            )
            ->add(
                'lat',
                HiddenType::class,
                [
                    'attr' => ['class' => 'js-gmaps-lat']
                ]
            )
            ->add(
                'lng',
                HiddenType::class,
                [
                    'attr' => ['class' => 'js-gmaps-lng']
                ]
            )
            ->add(
                'locality',
                HiddenType::class,
                [
                    'attr' => ['class' => 'js-gmaps-locality']
                ]
            )
            ->add(
                'administrative_area',
                HiddenType::class,
                [
                    'attr' => ['class' => 'js-gmaps-administrative_area']
                ]
            )
            ->add(
                'country',
                HiddenType::class,
                [
                    'attr' => ['class' => 'js-gmaps-country']
                ]
            )
            ->add(
                'placeId',
                HiddenType::class,
                [
                    'attr' => ['class' => 'js-gmaps-placeId']
                ]
            )
            ->add(
                'languages',
                EntityType::class,
                [
                    'class' => 'AppBundle\Entity\Langue',
                    'choice_label' => 'code',
                    'expanded' => false,
                    'multiple' => true,
                    'required' => true
                ]
            )
            ->add(
                'nationality',
                CountryType::class,
                [

                ]
            )
        ;

        /*
         *  ->add(
            'genre',
            EntityType::class,
            [
                'class' => 'AppBundle\Entity\Genre',
                'choice_label' => 'name',
                'choice_value' => 'name',
                'placeholder' => 'trav.please.select',
                'expanded' => false,
                'multiple' => false,
                'required' => true,
                'translation_domain' => 'messages',
                'choice_translation_domain' => 'messages'
            ]
        )
         */
        
        
    }


}
